<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project id="e884b604-b92c-4160-8094-4af362655b2a" activeEnvironment="Default" name="Basic REST CRUD" resourceRoot="" soapui-version="5.4.0" abortOnError="false" runType="SEQUENTIAL" xmlns:con="http://eviware.com/soapui/config"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.actions.iface.tools.soapui.TestRunnerAction@values-local"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Report Format(s)" value=""/>
  <con:entry key="Host:Port" value=""/>
  <con:entry key="Export JUnit Results" value="true"/>
  <con:entry key="Export All" value="false"/>
  <con:entry key="Save After" value="false"/>
  <con:entry key="Add Settings" value="false"/>
  <con:entry key="WSS Password Type" value=""/>
  <con:entry key="TestSuite" value="&lt;all>"/>
  <con:entry key="Endpoint" value=""/>
  <con:entry key="Select Report Type" value=""/>
  <con:entry key="System Properties" value=""/>
  <con:entry key="Password" value=""/>
  <con:entry key="Print Report" value="true"/>
  <con:entry key="Open Report" value="false"/>
  <con:entry key="Export JUnit Results with test properties" value="true"/>
  <con:entry key="Global Properties" value=""/>
  <con:entry key="Project Properties" value=""/>
  <con:entry key="Project Password" value=""/>
  <con:entry key="TestCase" value="&lt;all>"/>
  <con:entry key="Username" value=""/>
  <con:entry key="user-settings.xml Password" value=""/>
  <con:entry key="TestRunner Path" value="C:\Program Files (x86)\SmartBear\SoapUI-5.4.0\bin"/>
  <con:entry key="Environment" value="Default"/>
  <con:entry key="Coverage Report" value="false"/>
  <con:entry key="Enable UI" value="false"/>
  <con:entry key="Root Folder" value="F:\TypeScript\KeystoneTutorial\soapUI\Test Initial settings\results"/>
  <con:entry key="Ignore Errors" value="false"/>
  <con:entry key="Domain" value=""/>
  <con:entry key="Tool Args" value=""/>
  <con:entry key="Save Project" value="false"/>
</xml-fragment>]]></con:setting></con:settings><con:interface xsi:type="con:RestService" id="da048cad-2045-425c-872c-25bc995475e8" wadlVersion="http://wadl.dev.java.net/2009/02" name="http://localhost:3000" type="rest" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints><con:endpoint>http://localhost:3000</con:endpoint></con:endpoints><con:resource name="signin" path="/api/signin" id="7a3807d1-667d-41cb-addd-0a1bc8588fd3"><con:settings/><con:parameters><con:parameter><con:name>username</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>password</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>secret</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="Post" id="e61c3f5f-5302-48de-9dd7-914bfbc733f8" method="POST"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>text/html; charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>403 500</con:status><con:params/><con:element xmlns:sig="http://localhost/keystone/signin">sig:Fault</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>text/html; charset=utf-8</con:mediaType><con:status>500</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/x-www-form-urlencoded</con:mediaType><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:sig="http://localhost/keystone/signin">sig:Response</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/plain; charset=utf-8</con:mediaType><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="as Admin" id="2bd0363d-77c6-4a16-b21b-0cc3314df092" mediaType="application/x-www-form-urlencoded" postQueryString="true"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://localhost:3000</con:endpoint><con:request/><con:originalUri>http://localhost/keystone/signin</con:originalUri><con:credentials><con:username>atrantow@web.de</con:username><con:password>admin</con:password><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="password" value="admin"/>
  <con:entry key="secret" value="${secret_glob}"/>
  <con:entry key="username" value="atrantow@web.de"/>
</con:parameters><con:parameterOrder><con:entry>username</con:entry><con:entry>password</con:entry><con:entry>secret</con:entry></con:parameterOrder></con:request></con:method></con:resource><con:resource name="REST all" path="/rest/all/{list-name}/{id}" id="c39c9ad1-0cbc-4f3a-a314-536d864bd069"><con:settings/><con:parameters><con:parameter><con:name>list-name</con:name><con:value>list-name</con:value><con:style>TEMPLATE</con:style><con:default>list-name</con:default></con:parameter><con:parameter><con:name>id</con:name><con:value>id</con:value><con:style>TEMPLATE</con:style><con:default>id</con:default></con:parameter></con:parameters><con:method name="View" id="78286990-0fdb-473f-8929-e56430b0c504" method="GET"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>text/plain; charset=utf-8</con:mediaType><con:status>401 400</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>404 500 400</con:status><con:params/><con:element xmlns:int="http://localhost/rest/all/intentionally_wrong/">int:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element>Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/html; charset=utf-8</con:mediaType><con:status>500</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation></con:method><con:method name="Remove" id="e2f96ba0-2531-49f9-a7b3-1f3d9396ca06" method="DELETE"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>text/plain; charset=utf-8</con:mediaType><con:status>403 401</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>500 400 404</con:status><con:params/><con:element xmlns:rol="http://localhost/rest/all/roles/">rol:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element>Response</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>text/plain; charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="Request 1" id="4e571fc9-ea7e-4705-b227-b662cc6b70ab" mediaType="application/json" postQueryString="false"><con:settings/><con:endpoint>http://localhost:3000</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource></con:interface><con:testSuite id="8c535088-1c14-42f6-ad6a-5c77c24f433b" name="Test debug sign-in"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="ba88b67b-c315-4d55-ac8e-132dbdb04fe5" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Missing credentials" searchProperties="true"><con:description>Sending incomplete credentials and expecting HTTP-Code 403 and appropriate errors</con:description><con:settings/><con:testStep type="restrequest" name="Missing username" id="17c0db8f-4c5d-4516-9212-1d70cd3aa1aa"><con:settings/><con:config service="http://localhost:3000" methodName="Post" resourcePath="/api/signin" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Missing username" id="1cba6904-db06-48da-976f-63500ef3c536" mediaType="application/x-www-form-urlencoded" postQueryString="true"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:3000</con:endpoint><con:request/><con:originalUri>http://localhost/api/signin</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="38281e2e-12a2-4ba2-b177-acf801326612" name="Access is forbidden"><con:configuration><codes>403</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="08331796-a307-4a68-8e61-cbc661f17fdb" name="Request was not successful"><con:configuration><path>$.success</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="bde2df05-699f-43b7-acee-84a15631579e" name="Errors contain &quot;credentials_not_complete&quot;"><con:configuration><path>$.data[0].errorId</path><content>credentials_not_complete</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="821cb87f-8bcb-484f-a830-16bcd5ef4d02" name="ErrorMsg is translated"><con:configuration><scriptText>def responseStr = messageExchange.getResponseContent();

def errorIDStartIdx = responseStr.indexOf('errorId');
def errorIdStr1 = responseStr.substring(errorIDStartIdx+10);
def errorIDEndIdx = errorIdStr1.indexOf('"');
def errorIdStr = errorIdStr1.substring(0, errorIDEndIdx);

def errorMsgStartIdx = responseStr.indexOf('errorMsg');
def errorMsgStr1 = responseStr.substring(errorMsgStartIdx+11);
def errorMsgEndIdx = errorMsgStr1.indexOf('"');
def errorMsgStr = errorMsgStr1.substring(0, errorMsgEndIdx);

assert errorIdStr != errorMsgStr</scriptText></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="password" value="test"/>
  <con:entry key="secret" value="1234"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Missing password" id="76914462-fd53-498e-b67f-62c1d6ee9126"><con:settings/><con:config service="http://localhost:3000" methodName="Post" resourcePath="/api/signin" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Missing password" id="1cba6904-db06-48da-976f-63500ef3c536" mediaType="application/x-www-form-urlencoded" postQueryString="true"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:3000</con:endpoint><con:request/><con:originalUri>http://localhost/api/signin</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="38281e2e-12a2-4ba2-b177-acf801326612" name="Access is forbidden"><con:configuration><codes>403</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="08331796-a307-4a68-8e61-cbc661f17fdb" name="Request was not successful"><con:configuration><path>$.success</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="e09b25c7-92f9-45d2-a2c5-3c3dc8dbb0fd" name="Errors contain &quot;credentials_not_complete&quot;"><con:configuration><path>$.data[0].errorId</path><content>credentials_not_complete</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="24d6df9b-ffd2-49da-92b7-351c48d8078b" name="ErrorMsg is translated"><con:configuration><scriptText>def responseStr = messageExchange.getResponseContent();

def errorIDStartIdx = responseStr.indexOf('errorId');
def errorIdStr1 = responseStr.substring(errorIDStartIdx+10);
def errorIDEndIdx = errorIdStr1.indexOf('"');
def errorIdStr = errorIdStr1.substring(0, errorIDEndIdx);

def errorMsgStartIdx = responseStr.indexOf('errorMsg');
def errorMsgStr1 = responseStr.substring(errorMsgStartIdx+11);
def errorMsgEndIdx = errorMsgStr1.indexOf('"');
def errorMsgStr = errorMsgStr1.substring(0, errorMsgEndIdx);

assert errorIdStr != errorMsgStr</scriptText></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="secret" value="1234"/>
  <con:entry key="username" value="test"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Missing secret" id="2364813e-93fb-4ad2-bbe5-eb5303f1224d"><con:settings/><con:config service="http://localhost:3000" methodName="Post" resourcePath="/api/signin" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Missing secret" id="1cba6904-db06-48da-976f-63500ef3c536" mediaType="application/x-www-form-urlencoded" postQueryString="true"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:3000</con:endpoint><con:request/><con:originalUri>http://localhost/api/signin</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="38281e2e-12a2-4ba2-b177-acf801326612" name="Access is forbidden"><con:configuration><codes>403</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="08331796-a307-4a68-8e61-cbc661f17fdb" name="Request was not successful"><con:configuration><path>$.success</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="649f1948-c914-4ad9-a854-50038ccd8805" name="Errors contain &quot;credentials_not_complete&quot;"><con:configuration><path>$.data[0].errorId</path><content>credentials_not_complete</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="e869388b-6b1c-4063-b312-b69a06595c6c" name="ErrorMsg is translated"><con:configuration><scriptText>def responseStr = messageExchange.getResponseContent();

def errorIDStartIdx = responseStr.indexOf('errorId');
def errorIdStr1 = responseStr.substring(errorIDStartIdx+10);
def errorIDEndIdx = errorIdStr1.indexOf('"');
def errorIdStr = errorIdStr1.substring(0, errorIDEndIdx);

def errorMsgStartIdx = responseStr.indexOf('errorMsg');
def errorMsgStr1 = responseStr.substring(errorMsgStartIdx+11);
def errorMsgEndIdx = errorMsgStr1.indexOf('"');
def errorMsgStr = errorMsgStr1.substring(0, errorMsgEndIdx);

assert errorIdStr != errorMsgStr</scriptText></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="password" value="test"/>
  <con:entry key="username" value="test"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="5cdb3968-4bbe-4362-b25a-22e4e150e9b4" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Invalid credentials" searchProperties="true"><con:settings/><con:testStep type="restrequest" name="Invalid username" id="668059ef-c432-412d-ae35-d95106a013c2"><con:settings/><con:config service="http://localhost:3000" methodName="Post" resourcePath="/api/signin" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Invalid username" id="1cba6904-db06-48da-976f-63500ef3c536" mediaType="application/x-www-form-urlencoded" postQueryString="true"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:3000</con:endpoint><con:request/><con:originalUri>http://localhost/api/signin</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="38281e2e-12a2-4ba2-b177-acf801326612" name="Access is forbidden"><con:configuration><codes>403</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="08331796-a307-4a68-8e61-cbc661f17fdb" name="Request was not successful"><con:configuration><path>$.success</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="1a09e185-3158-483a-9d54-f668ffb59ea1" name="Errors contain &quot;credentials_not_correct&quot;"><con:configuration><path>$.data[0].errorId</path><content>credentials_not_correct</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="d951ba41-56ce-421e-98a3-be4c7dc8c251" name="ErrorMsg is translated"><con:configuration><scriptText>def responseStr = messageExchange.getResponseContent();

def errorIDStartIdx = responseStr.indexOf('errorId');
def errorIdStr1 = responseStr.substring(errorIDStartIdx+10);
def errorIDEndIdx = errorIdStr1.indexOf('"');
def errorIdStr = errorIdStr1.substring(0, errorIDEndIdx);

def errorMsgStartIdx = responseStr.indexOf('errorMsg');
def errorMsgStr1 = responseStr.substring(errorMsgStartIdx+11);
def errorMsgEndIdx = errorMsgStr1.indexOf('"');
def errorMsgStr = errorMsgStr1.substring(0, errorMsgEndIdx);

assert errorIdStr != errorMsgStr</scriptText></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="password" value="${#Project#proj_admin-password}"/>
  <con:entry key="secret" value="${#Project#proj_secret}"/>
  <con:entry key="username" value="intentionally_wrong"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Invalid password" id="aa475a0a-c54a-4d9c-80bc-3c5e0527f581"><con:settings/><con:config service="http://localhost:3000" methodName="Post" resourcePath="/api/signin" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Invalid password" id="1cba6904-db06-48da-976f-63500ef3c536" mediaType="application/x-www-form-urlencoded" postQueryString="true"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:3000</con:endpoint><con:request/><con:originalUri>http://localhost/api/signin</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="38281e2e-12a2-4ba2-b177-acf801326612" name="Access is forbidden"><con:configuration><codes>403</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="08331796-a307-4a68-8e61-cbc661f17fdb" name="Request was not successful"><con:configuration><path>$.success</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="db915db4-87a3-4f47-b0eb-4d2ddcaa7796" name="Errors contain &quot;credentials_not_correct&quot;"><con:configuration><path>$.data[0].errorId</path><content>credentials_not_correct</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="901e5785-dc29-4803-9215-a17454309446" name="ErrorMsg is translated"><con:configuration><scriptText>def responseStr = messageExchange.getResponseContent();

def errorIDStartIdx = responseStr.indexOf('errorId');
def errorIdStr1 = responseStr.substring(errorIDStartIdx+10);
def errorIDEndIdx = errorIdStr1.indexOf('"');
def errorIdStr = errorIdStr1.substring(0, errorIDEndIdx);

def errorMsgStartIdx = responseStr.indexOf('errorMsg');
def errorMsgStr1 = responseStr.substring(errorMsgStartIdx+11);
def errorMsgEndIdx = errorMsgStr1.indexOf('"');
def errorMsgStr = errorMsgStr1.substring(0, errorMsgEndIdx);

assert errorIdStr != errorMsgStr</scriptText></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="password" value="intentionally_wrong"/>
  <con:entry key="secret" value="${#Project#proj_secret}"/>
  <con:entry key="username" value="${#Project#proj_admin-user-name}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Invalid secret" id="c6960782-717d-4ebd-b876-ceaaa775e49f"><con:settings/><con:config service="http://localhost:3000" methodName="Post" resourcePath="/api/signin" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Invalid secret" id="1cba6904-db06-48da-976f-63500ef3c536" mediaType="application/x-www-form-urlencoded" postQueryString="true"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:3000</con:endpoint><con:request/><con:originalUri>http://localhost/api/signin</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="38281e2e-12a2-4ba2-b177-acf801326612" name="Access is forbidden"><con:configuration><codes>403</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="08331796-a307-4a68-8e61-cbc661f17fdb" name="Request was not successful"><con:configuration><path>$.success</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="dcec3d4b-38ba-46d9-90a7-de4b8d2b75ec" name="Errors contain &quot;credentials_not_correct&quot;"><con:configuration><path>$.data[0].errorId</path><content>credentials_not_correct</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="b9ace006-5b8d-4f5d-9c50-970ad787db22" name="ErrorMsg is translated"><con:configuration><scriptText>def responseStr = messageExchange.getResponseContent();

def errorIDStartIdx = responseStr.indexOf('errorId');
def errorIdStr1 = responseStr.substring(errorIDStartIdx+10);
def errorIDEndIdx = errorIdStr1.indexOf('"');
def errorIdStr = errorIdStr1.substring(0, errorIDEndIdx);

def errorMsgStartIdx = responseStr.indexOf('errorMsg');
def errorMsgStr1 = responseStr.substring(errorMsgStartIdx+11);
def errorMsgEndIdx = errorMsgStr1.indexOf('"');
def errorMsgStr = errorMsgStr1.substring(0, errorMsgEndIdx);

assert errorIdStr != errorMsgStr</scriptText></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="password" value="${#Project#proj_admin-password}"/>
  <con:entry key="secret" value="intentionally_wrong"/>
  <con:entry key="username" value="${#Project#proj_admin-user-name}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="2ee07c6e-020c-46db-81c8-3bd2457794ce" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Successful sign-in as admin" searchProperties="true"><con:settings/><con:testStep type="restrequest" name="Successful sign-in" id="32064dda-bcdf-41fb-b922-94c134c812a8"><con:settings/><con:config service="http://localhost:3000" methodName="Post" resourcePath="/api/signin" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Successful sign-in" id="1cba6904-db06-48da-976f-63500ef3c536" mediaType="application/x-www-form-urlencoded" postQueryString="true"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:3000</con:endpoint><con:request/><con:originalUri>http://localhost/api/signin</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="fb231833-8ade-4401-9863-9fc4f3435552" name="Access is allowed"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="981c42fe-82bd-4c78-aa0e-4523f3d7320e" name="Request was successful"><con:configuration><path>$.success</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="password" value="${#Project#proj_admin-password}"/>
  <con:entry key="secret" value="${#Project#proj_secret}"/>
  <con:entry key="username" value="${#Project#proj_admin-user-name}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties/></con:testCase><con:properties/><con:setupScript/></con:testSuite><con:testSuite id="adb3b4fc-34fa-4331-9157-2c15d82409f0" name="Test initial settings"><con:settings/><con:runType>PARALLELL</con:runType><con:testCase id="e11b0437-ece2-423b-b034-14c9d24e1905" failOnError="false" failTestCaseOnErrors="true" keepSession="true" maxResults="0" name="VIEW initial data" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:description>Here we test the GET-Method for the REST-API. 
The treatment of unknown lists-names and the check for permissions are done in a central methods. 
As GET has not so many interessting cases to test, we test the behaviour here in detail:

Whether or not access is granted is implemented separately for guests, admins and others users.
So we need to test them here.

Between Guest and Authenticatd User without needed role is a difference in code. So we test both here.
Administrator is the only who has access. With him we test to receive all roles, one role with the ID of the admin-role and to request one role with a invalid ID.
We do not test to GET the lists "users" or "permissions" here, because there are no separate sections of code behind that.
</con:description><con:settings/><con:testStep type="restrequest" name="View unknown list as Guest" id="c1954995-4c21-466b-aa91-be0b6bcdc5a5"><con:settings/><con:config service="http://localhost:3000" methodName="View" resourcePath="/rest/all/{list-name}/{id}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="View unknown list as Guest" id="d3666fcc-85ab-499e-9d87-e3d15fa50f4c" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:3000</con:endpoint><con:request/><con:originalUri>http://localhost/rest/all/intentionally_wrong/</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="a40059b2-79a0-4ad3-8cd5-0f89b69e1fea" name="Resource was not found"><con:configuration><codes>404</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="fcf8cd93-7759-4002-9545-ef0ad4b46448" name="Request was not successful"><con:configuration><path>$.success</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="bbe26766-f2e9-48c4-93fb-5c7ab5072f41" name="Errors contain &quot;unknown_keystone_list&quot;"><con:configuration><path>$.data[0].errorId</path><content>unknown_keystone_list</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="c9dc5ac8-e604-46fc-9b35-9a7cb1a35043" name="ErrorMsg is translated"><con:configuration><scriptText>def responseStr = messageExchange.getResponseContent();

def errorIDStartIdx = responseStr.indexOf('errorId');
def errorIdStr1 = responseStr.substring(errorIDStartIdx+10);
def errorIDEndIdx = errorIdStr1.indexOf('"');
def errorIdStr = errorIdStr1.substring(0, errorIDEndIdx);

def errorMsgStartIdx = responseStr.indexOf('errorMsg');
def errorMsgStr1 = responseStr.substring(errorMsgStartIdx+11);
def errorMsgEndIdx = errorMsgStr1.indexOf('"');
def errorMsgStr = errorMsgStr1.substring(0, errorMsgEndIdx);

assert errorIdStr != errorMsgStr</scriptText></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="id" value=""/>
  <con:entry key="list-name" value="intentionally_wrong"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="View all roles as Guest" id="34d50738-9a23-4228-a0c7-7254b3a122e8"><con:settings/><con:config service="http://localhost:3000" resourcePath="/rest/all/{list-name}/{id}" methodName="View" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="View all roles as Guest" id="ba5a9adc-f6f1-41c3-9c5a-37efffa2832b" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://localhost:3000</con:endpoint><con:request/><con:originalUri>http://localhost/rest/all/roles/</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="08de2b47-c2f1-4a8d-b3ec-c1464cbe79eb" name="User has no rights for this request"><con:configuration><codes>401</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="id" value=""/>
  <con:entry key="list-name" value="roles"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Successful sign-in as RefUser Authenticated" id="6da6b3d0-008e-4a0d-9df0-6651e5e408f9"><con:settings/><con:config service="http://localhost:3000" methodName="Post" resourcePath="/api/signin" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Successful sign-in as RefUser Authenticated" id="1cba6904-db06-48da-976f-63500ef3c536" mediaType="application/x-www-form-urlencoded" postQueryString="true"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:3000</con:endpoint><con:request/><con:originalUri>http://localhost/api/signin</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="fb231833-8ade-4401-9863-9fc4f3435552" name="Access is allowed"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="981c42fe-82bd-4c78-aa0e-4523f3d7320e" name="Request was successful"><con:configuration><path>$.success</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="password" value="${#Project#proj_authenticated-password}"/>
  <con:entry key="secret" value="${#Project#proj_secret}"/>
  <con:entry key="username" value="${#Project#proj_authenticated-user-name}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="View unknown list as RefUser Authenticated" id="877ef083-e5f3-4139-a499-ad0c3f0adc3a"><con:settings/><con:config service="http://localhost:3000" methodName="View" resourcePath="/rest/all/{list-name}/{id}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="View unknown list as RefUser Authenticated" id="d3666fcc-85ab-499e-9d87-e3d15fa50f4c" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:3000</con:endpoint><con:request/><con:originalUri>http://localhost/rest/all/intentionally_wrong/</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="a40059b2-79a0-4ad3-8cd5-0f89b69e1fea" name="Resource was not found"><con:configuration><codes>404</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="fcf8cd93-7759-4002-9545-ef0ad4b46448" name="Request was not successful"><con:configuration><path>$.success</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="bbe26766-f2e9-48c4-93fb-5c7ab5072f41" name="Errors contain &quot;unknown_keystone_list&quot;"><con:configuration><path>$.data[0].errorId</path><content>unknown_keystone_list</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="efd2aaf6-9e69-4398-ac27-075d2f6b8e5d" name="ErrorMsg is translated"><con:configuration><scriptText>def responseStr = messageExchange.getResponseContent();

def errorIDStartIdx = responseStr.indexOf('errorId');
def errorIdStr1 = responseStr.substring(errorIDStartIdx+10);
def errorIDEndIdx = errorIdStr1.indexOf('"');
def errorIdStr = errorIdStr1.substring(0, errorIDEndIdx);

def errorMsgStartIdx = responseStr.indexOf('errorMsg');
def errorMsgStr1 = responseStr.substring(errorMsgStartIdx+11);
def errorMsgEndIdx = errorMsgStr1.indexOf('"');
def errorMsgStr = errorMsgStr1.substring(0, errorMsgEndIdx);

assert errorIdStr != errorMsgStr</scriptText></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="id" value=""/>
  <con:entry key="list-name" value="intentionally_wrong"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="View all roles as RefUser Authenticated" id="19aa46d4-627b-4c33-940b-73ca5791144c"><con:settings/><con:config service="http://localhost:3000" resourcePath="/rest/all/{list-name}/{id}" methodName="View" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="View all roles as RefUser Authenticated" id="ba5a9adc-f6f1-41c3-9c5a-37efffa2832b" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://localhost:3000</con:endpoint><con:request/><con:originalUri>http://localhost/rest/all/roles/</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="08de2b47-c2f1-4a8d-b3ec-c1464cbe79eb" name="User has no rights for this request"><con:configuration><codes>401</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="id" value=""/>
  <con:entry key="list-name" value="roles"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Successful sign-in as Admin" id="6a197e57-08e3-49a9-82ea-d15afb2e24dc"><con:settings/><con:config service="http://localhost:3000" methodName="Post" resourcePath="/api/signin" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Successful sign-in as Admin" id="1cba6904-db06-48da-976f-63500ef3c536" mediaType="application/x-www-form-urlencoded" postQueryString="true"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:3000</con:endpoint><con:request/><con:originalUri>http://localhost/api/signin</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="fb231833-8ade-4401-9863-9fc4f3435552" name="Access is allowed"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="981c42fe-82bd-4c78-aa0e-4523f3d7320e" name="Request was successful"><con:configuration><path>$.success</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="password" value="${#Project#proj_admin-password}"/>
  <con:entry key="secret" value="${#Project#proj_secret}"/>
  <con:entry key="username" value="${#Project#proj_admin-user-name}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="View unknown list as Admin" id="ac69e3af-1276-4304-afa3-7c763e397267"><con:settings/><con:config service="http://localhost:3000" methodName="View" resourcePath="/rest/all/{list-name}/{id}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="View unknown list as Admin" id="d3666fcc-85ab-499e-9d87-e3d15fa50f4c" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:3000</con:endpoint><con:request/><con:originalUri>http://localhost/rest/all/intentionally_wrong/</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="a40059b2-79a0-4ad3-8cd5-0f89b69e1fea" name="Resource was not found"><con:configuration><codes>404</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="fcf8cd93-7759-4002-9545-ef0ad4b46448" name="Request was not successful"><con:configuration><path>$.success</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="bbe26766-f2e9-48c4-93fb-5c7ab5072f41" name="Errors contain &quot;unknown_keystone_list&quot;"><con:configuration><path>$.data[0].errorId</path><content>unknown_keystone_list</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="ec583276-1b64-4ce2-8370-b5f5d4728f15" name="ErrorMsg is translated"><con:configuration><scriptText>def responseStr = messageExchange.getResponseContent();

def errorIDStartIdx = responseStr.indexOf('errorId');
def errorIdStr1 = responseStr.substring(errorIDStartIdx+10);
def errorIDEndIdx = errorIdStr1.indexOf('"');
def errorIdStr = errorIdStr1.substring(0, errorIDEndIdx);

def errorMsgStartIdx = responseStr.indexOf('errorMsg');
def errorMsgStr1 = responseStr.substring(errorMsgStartIdx+11);
def errorMsgEndIdx = errorMsgStr1.indexOf('"');
def errorMsgStr = errorMsgStr1.substring(0, errorMsgEndIdx);

assert errorIdStr != errorMsgStr</scriptText></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="id" value=""/>
  <con:entry key="list-name" value="intentionally_wrong"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="View all roles as Admin" id="7fd060dd-5c4c-4b09-9cca-24f01443d8b6"><con:settings/><con:config service="http://localhost:3000" resourcePath="/rest/all/{list-name}/{id}" methodName="View" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="View all roles as Admin" id="ba5a9adc-f6f1-41c3-9c5a-37efffa2832b" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://localhost:3000</con:endpoint><con:request/><con:originalUri>http://localhost/rest/all/roles/</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="1403d999-3e47-422a-af28-9e8563383f0d" name="User is authorized for this request"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="9bf1c23d-323e-452d-bcef-3ad3c81b46de" name="Request was successful"><con:configuration><path>$.success</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="7247eca0-ba04-478d-945f-ad70b6390456" name="Total number is 3"><con:configuration><path>$.total</path><content>3</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Count" id="52ad2d95-ce76-4ee8-b14a-116d04cec7f2" name="Data-array contains 3 elements"><con:configuration><path>$.data</path><content>3</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="id" value=""/>
  <con:entry key="list-name" value="roles"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Transfer Id of Admin-role" id="7ce36b57-c572-4d4f-ab3e-2f0e16539d97"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="true" transferChildNodes="false"><con:name>transfer to "View one valid"</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>View all roles as Admin</con:sourceStep><con:sourcePath>$.data[?(@.name=='Administrator')][0]._id</con:sourcePath><con:targetType>id</con:targetType><con:targetStep>View one role with valid ID as Admin</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="View one role with valid ID as Admin" id="4cd68f35-e707-49b8-85c2-4fe4f8f651fd"><con:settings/><con:config service="http://localhost:3000" resourcePath="/rest/all/{list-name}/{id}" methodName="View" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="View one role with valid ID as Admin" id="ba5a9adc-f6f1-41c3-9c5a-37efffa2832b" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://localhost:3000</con:endpoint><con:request/><con:originalUri>http://localhost/rest/all/roles/</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="1403d999-3e47-422a-af28-9e8563383f0d" name="User is authorized for this request"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="9bf1c23d-323e-452d-bcef-3ad3c81b46de" name="Request was successful"><con:configuration><path>$.success</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="7247eca0-ba04-478d-945f-ad70b6390456" name="Total number is 1"><con:configuration><path>$.total</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Count" id="52ad2d95-ce76-4ee8-b14a-116d04cec7f2" name="Data-array contains 3 elements"><con:configuration><path>$.data</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="0e9ccd30-c26e-4556-93f7-ae9fa4e8de25" name="Received role is Admin-role"><con:configuration><path>$.data[0].isAdminRole</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="id" value="5aaad6e041ebd51898aa3728"/>
  <con:entry key="list-name" value="roles"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="View one role with invalid ID as Admin" id="a61f2144-accf-4399-b4d0-eb4a617575e4"><con:settings/><con:config service="http://localhost:3000" methodName="View" resourcePath="/rest/all/{list-name}/{id}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="View one role with invalid ID as Admin" id="7662ac93-2bff-4b30-a866-ab71ce3e7ff7" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:3000</con:endpoint><con:request/><con:originalUri>http://localhost/rest/all/roles/intentionally_wrong</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="322545a9-9e33-459c-8b39-833894eb9d27" name="Resource was not found"><con:configuration><codes>404</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="f3fdfe19-c957-49cd-a033-1617a1faf1b0" name="Request was not successful"><con:configuration><path>$.success</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="bd907e0e-e417-4360-ba7f-65eb65d3021a" name="Errors contain &quot;no_records_for_id&quot;"><con:configuration><path>$.data[0].errorId</path><content>no_records_for_id</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="7e08c312-6d4d-4dad-a54f-3044f5e6a7e4" name="ErrorMsg is translated"><con:configuration><scriptText>def responseStr = messageExchange.getResponseContent();

def errorIDStartIdx = responseStr.indexOf('errorId');
def errorIdStr1 = responseStr.substring(errorIDStartIdx+10);
def errorIDEndIdx = errorIdStr1.indexOf('"');
def errorIdStr = errorIdStr1.substring(0, errorIDEndIdx);

def errorMsgStartIdx = responseStr.indexOf('errorMsg');
def errorMsgStr1 = responseStr.substring(errorMsgStartIdx+11);
def errorMsgEndIdx = errorMsgStr1.indexOf('"');
def errorMsgStr = errorMsgStr1.substring(0, errorMsgEndIdx);

assert errorIdStr != errorMsgStr</scriptText></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="id" value="intentionally_wrong"/>
  <con:entry key="list-name" value="roles"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="0d378624-8242-4558-b0b3-e6bac6bfcf97" failOnError="false" failTestCaseOnErrors="true" keepSession="true" maxResults="0" name="Attempt to REMOVE initial data" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:description>We test the GET-Method for the REST-API. 
Unknown lists-names are implemented separately. So it must be tested here.
Between Guest and Authenticatd User without needed role is a difference in code. So we test both here.
Administrator is the only who has access. With him we test to receive all roles, one role with the ID of the admin-role and to request one role with a invalid ID.
We do not test to GET the lists "users" or "permissions" here, because there are no separate sections of code behind that.
</con:description><con:settings/><con:testStep type="restrequest" name="Remove unknown list as Guest" id="0b51ade5-8981-4809-8c01-5306fd1fc871"><con:settings/><con:config service="http://localhost:3000" methodName="Remove" resourcePath="/rest/all/{list-name}/{id}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Remove unknown list as Guest" id="d3666fcc-85ab-499e-9d87-e3d15fa50f4c" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:3000</con:endpoint><con:request/><con:originalUri>http://localhost/rest/all/intentionally_wrong/</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="a40059b2-79a0-4ad3-8cd5-0f89b69e1fea" name="Resource was not found"><con:configuration><codes>404</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="fcf8cd93-7759-4002-9545-ef0ad4b46448" name="Request was not successful"><con:configuration><path>$.success</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="bbe26766-f2e9-48c4-93fb-5c7ab5072f41" name="Errors contain &quot;unknown_keystone_list&quot;"><con:configuration><path>$.data[0].errorId</path><content>unknown_keystone_list</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="18291873-9dcc-431b-9665-fdec8fb1d3d7" name="ErrorMsg is translated"><con:configuration><scriptText>def responseStr = messageExchange.getResponseContent();

def errorIDStartIdx = responseStr.indexOf('errorId');
def errorIdStr1 = responseStr.substring(errorIDStartIdx+10);
def errorIDEndIdx = errorIdStr1.indexOf('"');
def errorIdStr = errorIdStr1.substring(0, errorIDEndIdx);

def errorMsgStartIdx = responseStr.indexOf('errorMsg');
def errorMsgStr1 = responseStr.substring(errorMsgStartIdx+11);
def errorMsgEndIdx = errorMsgStr1.indexOf('"');
def errorMsgStr = errorMsgStr1.substring(0, errorMsgEndIdx);

assert errorIdStr != errorMsgStr



</scriptText></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="id" value=""/>
  <con:entry key="list-name" value="intentionally_wrong"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Remove all roles as Guest" id="32296b00-ef73-4e8d-9fef-c090786388c5"><con:settings/><con:config service="http://localhost:3000" resourcePath="/rest/all/{list-name}/{id}" methodName="Remove" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Remove all roles as Guest" id="ba5a9adc-f6f1-41c3-9c5a-37efffa2832b" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://localhost:3000</con:endpoint><con:request/><con:originalUri>http://localhost/rest/all/roles/</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="08de2b47-c2f1-4a8d-b3ec-c1464cbe79eb" name="User has no rights for this request"><con:configuration><codes>401</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="id" value=""/>
  <con:entry key="list-name" value="roles"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Remove all permissions as Guest" id="a1e616bf-d9ca-460a-8015-d76c4ce2fa2e"><con:settings/><con:config service="http://localhost:3000" resourcePath="/rest/all/{list-name}/{id}" methodName="Remove" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Remove all permissions as Guest" id="ba5a9adc-f6f1-41c3-9c5a-37efffa2832b" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://localhost:3000</con:endpoint><con:request/><con:originalUri>http://localhost/rest/all/roles/</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="08de2b47-c2f1-4a8d-b3ec-c1464cbe79eb" name="Request is generally not allowed"><con:configuration><codes>403</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="id" value=""/>
  <con:entry key="list-name" value="permissions"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Successful sign-in as RefUser Authenticated" id="ca80bb00-d15e-45ba-a22d-90700423e6c6"><con:settings/><con:config service="http://localhost:3000" methodName="Post" resourcePath="/api/signin" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Successful sign-in as RefUser Authenticated" id="1cba6904-db06-48da-976f-63500ef3c536" mediaType="application/x-www-form-urlencoded" postQueryString="true"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:3000</con:endpoint><con:request/><con:originalUri>http://localhost/api/signin</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="fb231833-8ade-4401-9863-9fc4f3435552" name="Access is allowed"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="981c42fe-82bd-4c78-aa0e-4523f3d7320e" name="Request was successful"><con:configuration><path>$.success</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="password" value="${#Project#proj_authenticated-password}"/>
  <con:entry key="secret" value="${#Project#proj_secret}"/>
  <con:entry key="username" value="${#Project#proj_authenticated-user-name}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Remove unknown list as RefUser Authenticated" id="ac7ee98b-ae8c-4156-890d-105a9efaa313"><con:settings/><con:config service="http://localhost:3000" methodName="Remove" resourcePath="/rest/all/{list-name}/{id}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Remove unknown list as RefUser Authenticated" id="d3666fcc-85ab-499e-9d87-e3d15fa50f4c" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:3000</con:endpoint><con:request/><con:originalUri>http://localhost/rest/all/intentionally_wrong/</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="a40059b2-79a0-4ad3-8cd5-0f89b69e1fea" name="Resource was not found"><con:configuration><codes>404</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="fcf8cd93-7759-4002-9545-ef0ad4b46448" name="Request was not successful"><con:configuration><path>$.success</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="bbe26766-f2e9-48c4-93fb-5c7ab5072f41" name="Errors contain &quot;unknown_keystone_list&quot;"><con:configuration><path>$.data[0].errorId</path><content>unknown_keystone_list</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="995f14fc-a8b6-4f5e-90a8-e6036a49c617" name="ErrorMsg is translated"><con:configuration><scriptText>def responseStr = messageExchange.getResponseContent();

def errorIDStartIdx = responseStr.indexOf('errorId');
def errorIdStr1 = responseStr.substring(errorIDStartIdx+10);
def errorIDEndIdx = errorIdStr1.indexOf('"');
def errorIdStr = errorIdStr1.substring(0, errorIDEndIdx);

def errorMsgStartIdx = responseStr.indexOf('errorMsg');
def errorMsgStr1 = responseStr.substring(errorMsgStartIdx+11);
def errorMsgEndIdx = errorMsgStr1.indexOf('"');
def errorMsgStr = errorMsgStr1.substring(0, errorMsgEndIdx);

assert errorIdStr != errorMsgStr</scriptText></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="id" value=""/>
  <con:entry key="list-name" value="intentionally_wrong"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Remove all roles as RefUser Authenticated" id="00cac3d8-8b4f-4411-962e-0f1ec2cc9064"><con:settings/><con:config service="http://localhost:3000" resourcePath="/rest/all/{list-name}/{id}" methodName="Remove" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Remove all roles as RefUser Authenticated" id="ba5a9adc-f6f1-41c3-9c5a-37efffa2832b" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://localhost:3000</con:endpoint><con:request/><con:originalUri>http://localhost/rest/all/roles/</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="08de2b47-c2f1-4a8d-b3ec-c1464cbe79eb" name="User has no rights for this request"><con:configuration><codes>401</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="id" value=""/>
  <con:entry key="list-name" value="roles"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Remove all permissions as RefUser Authenticated" id="03691b26-d24c-4f58-a7a9-d6cd67d8584f"><con:settings/><con:config service="http://localhost:3000" resourcePath="/rest/all/{list-name}/{id}" methodName="Remove" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Remove all permissions as RefUser Authenticated" id="ba5a9adc-f6f1-41c3-9c5a-37efffa2832b" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://localhost:3000</con:endpoint><con:request/><con:originalUri>http://localhost/rest/all/roles/</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="08de2b47-c2f1-4a8d-b3ec-c1464cbe79eb" name="Request is generally not allowed"><con:configuration><codes>403</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="id" value=""/>
  <con:entry key="list-name" value="permissions"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Successful sign-in as Admin" id="c86f3cf5-d3b9-44a9-a5f2-891ca9cf9701"><con:settings/><con:config service="http://localhost:3000" methodName="Post" resourcePath="/api/signin" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Successful sign-in as Admin" id="1cba6904-db06-48da-976f-63500ef3c536" mediaType="application/x-www-form-urlencoded" postQueryString="true"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:3000</con:endpoint><con:request/><con:originalUri>http://localhost/api/signin</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="fb231833-8ade-4401-9863-9fc4f3435552" name="Access is allowed"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="981c42fe-82bd-4c78-aa0e-4523f3d7320e" name="Request was successful"><con:configuration><path>$.success</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="password" value="${#Project#proj_admin-password}"/>
  <con:entry key="secret" value="${#Project#proj_secret}"/>
  <con:entry key="username" value="${#Project#proj_admin-user-name}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Remove unknown list as Admin" id="5e7b7143-a040-4ae2-83ab-9027e0c4cccb"><con:settings/><con:config service="http://localhost:3000" methodName="Remove" resourcePath="/rest/all/{list-name}/{id}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Remove unknown list as Admin" id="d3666fcc-85ab-499e-9d87-e3d15fa50f4c" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:3000</con:endpoint><con:request/><con:originalUri>http://localhost/rest/all/intentionally_wrong/</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="a40059b2-79a0-4ad3-8cd5-0f89b69e1fea" name="Resource was not found"><con:configuration><codes>404</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="fcf8cd93-7759-4002-9545-ef0ad4b46448" name="Request was not successful"><con:configuration><path>$.success</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="bbe26766-f2e9-48c4-93fb-5c7ab5072f41" name="Errors contain &quot;unknown_keystone_list&quot;"><con:configuration><path>$.data[0].errorId</path><content>unknown_keystone_list</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="286b4001-15ff-4ee3-8306-24376737bc4a" name="ErrorMsg is translated"><con:configuration><scriptText>def responseStr = messageExchange.getResponseContent();

def errorIDStartIdx = responseStr.indexOf('errorId');
def errorIdStr1 = responseStr.substring(errorIDStartIdx+10);
def errorIDEndIdx = errorIdStr1.indexOf('"');
def errorIdStr = errorIdStr1.substring(0, errorIDEndIdx);

def errorMsgStartIdx = responseStr.indexOf('errorMsg');
def errorMsgStr1 = responseStr.substring(errorMsgStartIdx+11);
def errorMsgEndIdx = errorMsgStr1.indexOf('"');
def errorMsgStr = errorMsgStr1.substring(0, errorMsgEndIdx);

assert errorIdStr != errorMsgStr</scriptText></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="id" value=""/>
  <con:entry key="list-name" value="intentionally_wrong"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Attempt to remove all roles as Admin" id="e72278df-967e-46c4-94f1-cdaaecc7d748"><con:settings/><con:config service="http://localhost:3000" resourcePath="/rest/all/{list-name}/{id}" methodName="Remove" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Attempt to remove all roles as Admin" id="ba5a9adc-f6f1-41c3-9c5a-37efffa2832b" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://localhost:3000</con:endpoint><con:request/><con:originalUri>http://localhost/rest/all/roles/</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="1403d999-3e47-422a-af28-9e8563383f0d" name="A custom error occured"><con:configuration><codes>400</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="9bf1c23d-323e-452d-bcef-3ad3c81b46de" name="Request was not successful"><con:configuration><path>$.success</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="c935e591-8534-4a6e-9316-395492b24996" name="Errors contain 'not_allowed_to_delete_all_records_at_once'"><con:configuration><path>$.data[0].errorId</path><content>not_allowed_to_delete_all_records_at_once</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="3bbe43c1-b69d-498b-b9dd-beb45b3db18f" name="ErrorMsg is translated"><con:configuration><scriptText>def responseStr = messageExchange.getResponseContent();

def errorIDStartIdx = responseStr.indexOf('errorId');
def errorIdStr1 = responseStr.substring(errorIDStartIdx+10);
def errorIDEndIdx = errorIdStr1.indexOf('"');
def errorIdStr = errorIdStr1.substring(0, errorIDEndIdx);

def errorMsgStartIdx = responseStr.indexOf('errorMsg');
def errorMsgStr1 = responseStr.substring(errorMsgStartIdx+11);
def errorMsgEndIdx = errorMsgStr1.indexOf('"');
def errorMsgStr = errorMsgStr1.substring(0, errorMsgEndIdx);

assert errorIdStr != errorMsgStr</scriptText></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="id" value=""/>
  <con:entry key="list-name" value="users"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="View all roles as Admin" id="140abbd1-f904-497c-a4c8-7ca379468a63"><con:settings/><con:config service="http://localhost:3000" resourcePath="/rest/all/{list-name}/{id}" methodName="View" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="View all roles as Admin" id="ba5a9adc-f6f1-41c3-9c5a-37efffa2832b" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://localhost:3000</con:endpoint><con:request/><con:originalUri>http://localhost/rest/all/roles/</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="1403d999-3e47-422a-af28-9e8563383f0d" name="User is authorized for this request"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="9bf1c23d-323e-452d-bcef-3ad3c81b46de" name="Request was successful"><con:configuration><path>$.success</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="7247eca0-ba04-478d-945f-ad70b6390456" name="Total number is 3"><con:configuration><path>$.total</path><content>3</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Count" id="52ad2d95-ce76-4ee8-b14a-116d04cec7f2" name="Data-array contains 3 elements"><con:configuration><path>$.data</path><content>3</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="id" value=""/>
  <con:entry key="list-name" value="roles"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Transfer IDs of roles" id="da9a1d05-5195-46d4-a9d6-659b84b97cbf"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="true" transferChildNodes="false"><con:name>transfer to "Attempt to remove admin-role "</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>View all roles as Admin</con:sourceStep><con:sourcePath>$.data[?(@.isAdminRole==true)][0]._id</con:sourcePath><con:targetType>id</con:targetType><con:targetStep>Attempt to remove admin-role as Admin</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="true" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>transfer to "Attempt to remove used role "</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>View all roles as Admin</con:sourceStep><con:sourcePath>$.data[?(@.isAdminRole==false &amp; @.isGuestRole==false)][0]._id</con:sourcePath><con:targetType>id</con:targetType><con:targetStep>Attempt to remove used role as Admin</con:targetStep><con:targetPath xsi:nil="true"/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="true" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>transfer to "Attempt to remove guest-role"</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>View all roles as Admin</con:sourceStep><con:sourcePath>$.data[?(@.isGuestRole==true)][0]._id</con:sourcePath><con:targetType>id</con:targetType><con:targetStep>Attempt to remove guest-role as Admin</con:targetStep><con:targetPath xsi:nil="true"/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Attempt to remove admin-role as Admin" id="93089110-85df-43d3-b5aa-50043666395b"><con:settings/><con:config service="http://localhost:3000" resourcePath="/rest/all/{list-name}/{id}" methodName="Remove" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Attempt to remove admin-role as Admin" id="ba5a9adc-f6f1-41c3-9c5a-37efffa2832b" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://localhost:3000</con:endpoint><con:request/><con:originalUri>http://localhost/rest/all/roles/</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="1403d999-3e47-422a-af28-9e8563383f0d" name="A custom error occured"><con:configuration><codes>400</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="9bf1c23d-323e-452d-bcef-3ad3c81b46de" name="Request was not successful"><con:configuration><path>$.success</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="c935e591-8534-4a6e-9316-395492b24996" name="Errors contain 'cannot_delete_systemrole&quot;"><con:configuration><path>$.data[0].errorId</path><content>cannot_delete_systemrole</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="334c2c6e-eb88-4774-988f-09d04e9183c9" name="ErrorMsg is translated"><con:configuration><scriptText>def responseStr = messageExchange.getResponseContent();

def errorIDStartIdx = responseStr.indexOf('errorId');
def errorIdStr1 = responseStr.substring(errorIDStartIdx+10);
def errorIDEndIdx = errorIdStr1.indexOf('"');
def errorIdStr = errorIdStr1.substring(0, errorIDEndIdx);

def errorMsgStartIdx = responseStr.indexOf('errorMsg');
def errorMsgStr1 = responseStr.substring(errorMsgStartIdx+11);
def errorMsgEndIdx = errorMsgStr1.indexOf('"');
def errorMsgStr = errorMsgStr1.substring(0, errorMsgEndIdx);

assert errorIdStr != errorMsgStr</scriptText></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="id" value="5aaad6e041ebd51898aa3728"/>
  <con:entry key="list-name" value="roles"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Attempt to remove guest-role as Admin" id="c0f4c00c-a07a-4d95-8b28-000242502254"><con:settings/><con:config service="http://localhost:3000" resourcePath="/rest/all/{list-name}/{id}" methodName="Remove" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Attempt to remove guest-role as Admin" id="ba5a9adc-f6f1-41c3-9c5a-37efffa2832b" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://localhost:3000</con:endpoint><con:request/><con:originalUri>http://localhost/rest/all/roles/</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="1403d999-3e47-422a-af28-9e8563383f0d" name="A custom error occured"><con:configuration><codes>400</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="9bf1c23d-323e-452d-bcef-3ad3c81b46de" name="Request was not successful"><con:configuration><path>$.success</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="c935e591-8534-4a6e-9316-395492b24996" name="Errors contain 'cannot_delete_systemrole&quot;"><con:configuration><path>$.data[0].errorId</path><content>cannot_delete_systemrole</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="cccc9ef7-4e2e-4bf1-bb9e-5e371ec58121" name="ErrorMsg is translated"><con:configuration><scriptText>def responseStr = messageExchange.getResponseContent();

def errorIDStartIdx = responseStr.indexOf('errorId');
def errorIdStr1 = responseStr.substring(errorIDStartIdx+10);
def errorIDEndIdx = errorIdStr1.indexOf('"');
def errorIdStr = errorIdStr1.substring(0, errorIDEndIdx);

def errorMsgStartIdx = responseStr.indexOf('errorMsg');
def errorMsgStr1 = responseStr.substring(errorMsgStartIdx+11);
def errorMsgEndIdx = errorMsgStr1.indexOf('"');
def errorMsgStr = errorMsgStr1.substring(0, errorMsgEndIdx);

assert errorIdStr != errorMsgStr</scriptText></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="id" value="5aaad6e041ebd51898aa372a"/>
  <con:entry key="list-name" value="roles"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Attempt to remove used role as Admin" id="28b5be8c-a485-49c1-a831-09d02e480a5e"><con:settings/><con:config service="http://localhost:3000" resourcePath="/rest/all/{list-name}/{id}" methodName="Remove" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Attempt to remove used role as Admin" id="ba5a9adc-f6f1-41c3-9c5a-37efffa2832b" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://localhost:3000</con:endpoint><con:request/><con:originalUri>http://localhost/rest/all/roles/</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="1403d999-3e47-422a-af28-9e8563383f0d" name="A custom error occured"><con:configuration><codes>400</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="9bf1c23d-323e-452d-bcef-3ad3c81b46de" name="Request was not successful"><con:configuration><path>$.success</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="c935e591-8534-4a6e-9316-395492b24996" name="Errors contain 'role_is_assigned_to_user'"><con:configuration><path>$.data[0].errorId</path><content>role_is_assigned_to_user</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="6d31805d-bdc2-46ef-a8b4-6631859ebda2" name="ErrorMsg is translated"><con:configuration><scriptText>def responseStr = messageExchange.getResponseContent();

def errorIDStartIdx = responseStr.indexOf('errorId');
def errorIdStr1 = responseStr.substring(errorIDStartIdx+10);
def errorIDEndIdx = errorIdStr1.indexOf('"');
def errorIdStr = errorIdStr1.substring(0, errorIDEndIdx);

def errorMsgStartIdx = responseStr.indexOf('errorMsg');
def errorMsgStr1 = responseStr.substring(errorMsgStartIdx+11);
def errorMsgEndIdx = errorMsgStr1.indexOf('"');
def errorMsgStr = errorMsgStr1.substring(0, errorMsgEndIdx);

assert errorIdStr != errorMsgStr</scriptText></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="id" value="5aaad6e041ebd51898aa3729"/>
  <con:entry key="list-name" value="roles"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Remove one role with invalid ID as Admin" id="ba26dcee-df65-41c3-aef2-a1ed524419f6"><con:settings/><con:config service="http://localhost:3000" methodName="Remove" resourcePath="/rest/all/{list-name}/{id}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Remove one role with invalid ID as Admin" id="7662ac93-2bff-4b30-a866-ab71ce3e7ff7" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:3000</con:endpoint><con:request/><con:originalUri>http://localhost/rest/all/roles/intentionally_wrong</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="322545a9-9e33-459c-8b39-833894eb9d27" name="Resource was not found"><con:configuration><codes>404</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="f3fdfe19-c957-49cd-a033-1617a1faf1b0" name="Request was not successful"><con:configuration><path>$.success</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="bd907e0e-e417-4360-ba7f-65eb65d3021a" name="Errors contain &quot;no_records_for_id&quot;"><con:configuration><path>$.data[0].errorId</path><content>no_records_for_id</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="f8c0813b-8297-4718-bc91-be4612900068" name="ErrorMsg is translated"><con:configuration><scriptText>def responseStr = messageExchange.getResponseContent();

def errorIDStartIdx = responseStr.indexOf('errorId');
def errorIdStr1 = responseStr.substring(errorIDStartIdx+10);
def errorIDEndIdx = errorIdStr1.indexOf('"');
def errorIdStr = errorIdStr1.substring(0, errorIDEndIdx);

def errorMsgStartIdx = responseStr.indexOf('errorMsg');
def errorMsgStr1 = responseStr.substring(errorMsgStartIdx+11);
def errorMsgEndIdx = errorMsgStr1.indexOf('"');
def errorMsgStr = errorMsgStr1.substring(0, errorMsgEndIdx);

assert errorIdStr != errorMsgStr</scriptText></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="id" value="intentionally_wrong"/>
  <con:entry key="list-name" value="roles"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="View all permissions as Admin" id="37297511-1c13-4cea-bd44-f85f847de8e7"><con:settings/><con:config service="http://localhost:3000" resourcePath="/rest/all/{list-name}/{id}" methodName="View" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="View all permissions as Admin" id="ba5a9adc-f6f1-41c3-9c5a-37efffa2832b" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://localhost:3000</con:endpoint><con:request/><con:originalUri>http://localhost/rest/all/roles/</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="1403d999-3e47-422a-af28-9e8563383f0d" name="User is authorized for this request"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="9bf1c23d-323e-452d-bcef-3ad3c81b46de" name="Request was successful"><con:configuration><path>$.success</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="id" value=""/>
  <con:entry key="list-name" value="permissions"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Transfer IDs of permissions" id="4443636b-aa5d-4f7f-a71d-097a1393ad27"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>Transfer ID to "remove one"</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>View all permissions as Admin</con:sourceStep><con:sourcePath>$.data[0]._id</con:sourcePath><con:targetType>id</con:targetType><con:targetStep>Attempt to remove one permission as Admin</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Attempt to remove one permission as Admin" id="04603790-6265-4913-8f59-a4f838520c0f"><con:settings/><con:config service="http://localhost:3000" resourcePath="/rest/all/{list-name}/{id}" methodName="Remove" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Attempt to remove one permission as Admin" id="ba5a9adc-f6f1-41c3-9c5a-37efffa2832b" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://localhost:3000</con:endpoint><con:request/><con:originalUri>http://localhost/rest/all/roles/</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="a94c1ecb-ad5b-4fea-9fb8-ae94a143996f" name="Request is generally not allowed"><con:configuration><codes>403</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="id" value="5aaad6e041ebd51898aa372b"/>
  <con:entry key="list-name" value="permissions"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="View all users as Admin" id="2b951b4e-2d6b-4901-b9ea-37904f5e8077"><con:settings/><con:config service="http://localhost:3000" resourcePath="/rest/all/{list-name}/{id}" methodName="View" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="View all users as Admin" id="ba5a9adc-f6f1-41c3-9c5a-37efffa2832b" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://localhost:3000</con:endpoint><con:request/><con:originalUri>http://localhost/rest/all/roles/</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="1403d999-3e47-422a-af28-9e8563383f0d" name="User is authorized for this request"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="9bf1c23d-323e-452d-bcef-3ad3c81b46de" name="Request was successful"><con:configuration><path>$.success</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="id" value=""/>
  <con:entry key="list-name" value="users"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Transfer IDs of users" id="1d01bf7a-1b37-4aa4-a727-8c580084e7ec"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>Transfer ID to "remove admin-user"</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>View all users as Admin</con:sourceStep><con:sourcePath>$.data[?(@.canAccessKeystone==true)][0]._id</con:sourcePath><con:targetType>id</con:targetType><con:targetStep>Attempt to remove the current user as Admin</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="true" entitize="false" transferChildNodes="false"><con:name>Transfer ID to "remove reuser-authenticated"</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>View all users as Admin</con:sourceStep><con:sourcePath>$.data[?(@.key=='reuser-authenticated')][0]._id</con:sourcePath><con:targetType>id</con:targetType><con:targetStep>Attempt to remove refuser.authenticated as Admin</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Attempt to remove the current user as Admin" id="c2ce526a-dce5-4ac6-9252-6ce2f11ad15f"><con:settings/><con:config service="http://localhost:3000" resourcePath="/rest/all/{list-name}/{id}" methodName="Remove" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Attempt to remove the current user as Admin" id="ba5a9adc-f6f1-41c3-9c5a-37efffa2832b" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://localhost:3000</con:endpoint><con:request/><con:originalUri>http://localhost/rest/all/roles/</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="1403d999-3e47-422a-af28-9e8563383f0d" name="A custom error occured"><con:configuration><codes>400</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="9bf1c23d-323e-452d-bcef-3ad3c81b46de" name="Request was not successful"><con:configuration><path>$.success</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="c935e591-8534-4a6e-9316-395492b24996" name="Errors contain 'cannot_delete_current_user'"><con:configuration><path>$.data[0].errorId</path><content>cannot_delete_current_user</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="3bbe43c1-b69d-498b-b9dd-beb45b3db18f" name="ErrorMsg is translated"><con:configuration><scriptText>def responseStr = messageExchange.getResponseContent();

def errorIDStartIdx = responseStr.indexOf('errorId');
def errorIdStr1 = responseStr.substring(errorIDStartIdx+10);
def errorIDEndIdx = errorIdStr1.indexOf('"');
def errorIdStr = errorIdStr1.substring(0, errorIDEndIdx);

def errorMsgStartIdx = responseStr.indexOf('errorMsg');
def errorMsgStr1 = responseStr.substring(errorMsgStartIdx+11);
def errorMsgEndIdx = errorMsgStr1.indexOf('"');
def errorMsgStr = errorMsgStr1.substring(0, errorMsgEndIdx);

assert errorIdStr != errorMsgStr</scriptText></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="id" value="5aaad6e041ebd51898aa373d"/>
  <con:entry key="list-name" value="users"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Attempt to remove the last admin-user as Admin" id="6c0ad492-6f18-4123-9cdf-5860a1619173" disabled="true"><con:settings/><con:config service="http://localhost:3000" resourcePath="/rest/all/{list-name}/{id}" methodName="Remove" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Attempt to remove the last admin-user as Admin" id="ba5a9adc-f6f1-41c3-9c5a-37efffa2832b" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://localhost:3000</con:endpoint><con:request/><con:originalUri>http://localhost/rest/all/roles/</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="1403d999-3e47-422a-af28-9e8563383f0d" name="A custom error occured"><con:configuration><codes>400</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="9bf1c23d-323e-452d-bcef-3ad3c81b46de" name="Request was not successful"><con:configuration><path>$.success</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="c935e591-8534-4a6e-9316-395492b24996" name="Errors contain 'role_is_assigned_to_user'"><con:configuration><path>$.data[0].errorId</path><content>cannot_delete_all_admins</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="3bbe43c1-b69d-498b-b9dd-beb45b3db18f" name="ErrorMsg is translated"><con:configuration><scriptText>def responseStr = messageExchange.getResponseContent();

def errorIDStartIdx = responseStr.indexOf('errorId');
def errorIdStr1 = responseStr.substring(errorIDStartIdx+10);
def errorIDEndIdx = errorIdStr1.indexOf('"');
def errorIdStr = errorIdStr1.substring(0, errorIDEndIdx);

def errorMsgStartIdx = responseStr.indexOf('errorMsg');
def errorMsgStr1 = responseStr.substring(errorMsgStartIdx+11);
def errorMsgEndIdx = errorMsgStr1.indexOf('"');
def errorMsgStr = errorMsgStr1.substring(0, errorMsgEndIdx);

assert errorIdStr != errorMsgStr</scriptText></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="id" value="5aa5481f6f90420520e83b87"/>
  <con:entry key="list-name" value="users"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Attempt to remove refuser.authenticated as Admin" id="6d2eee96-b28c-4332-a7ab-f9b9293db8aa" disabled="true"><con:settings/><con:config service="http://localhost:3000" resourcePath="/rest/all/{list-name}/{id}" methodName="Remove" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Attempt to remove refuser.authenticated as Admin" id="ba5a9adc-f6f1-41c3-9c5a-37efffa2832b" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://localhost:3000</con:endpoint><con:request/><con:originalUri>http://localhost/rest/all/roles/</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="1403d999-3e47-422a-af28-9e8563383f0d" name="User is authorized for this request"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="9bf1c23d-323e-452d-bcef-3ad3c81b46de" name="Request was successful"><con:configuration><path>$.success</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="id" value="5aaad6e041ebd51898aa373f"/>
  <con:entry key="list-name" value="users"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties/></con:testCase><con:properties/><con:setupScript/></con:testSuite><con:properties><con:property><con:name>proj_secret</con:name><con:value>SFKPksldgfnjkdsgnnbsdSDFvkcuhluweraqr</con:value></con:property><con:property><con:name>proj_admin-user-name</con:name><con:value>admin@dummydomain.de</con:value></con:property><con:property><con:name>proj_admin-password</con:name><con:value>admin</con:value></con:property><con:property><con:name>proj_authenticated-user-name</con:name><con:value>refuser.authenticated@dummydomain.de</con:value></con:property><con:property><con:name>proj_authenticated-password</con:name><con:value>refuser</con:value></con:property></con:properties><con:wssContainer/><con:oAuth2ProfileContainer/><con:oAuth1ProfileContainer><con:oAuth1Profile><con:name>Profile 1</con:name><con:accessTokenPosition>HEADER</con:accessTokenPosition></con:oAuth1Profile></con:oAuth1ProfileContainer><con:sensitiveInformation/></con:soapui-project>